// from jekflix
@function rem($pixels) {
  @return ($pixels / 16px) * 1rem;
}


@mixin mainFont($weight: 700) {
  font-family: "Titillium Web", "Helvetica Neue", Helvetica, sans-serif;
  font-weight: $weight;
  font-style: normal;
}

@mixin size($width: 30, $height: 30) {
  width: #{$width}px;
  height: #{$height}px;
}

@mixin center($max-width: map-get($jeet, 'max-width'), $pad: 0) {
  @include clearfix;
  width: auto;
  max-width: $max-width;
  float: none;
  display: block;
  margin: {
    right: auto;
    left:  auto;
  };
  padding: {
    left:  $pad;
    right: $pad;
  };
}

@mixin align($direction: both) {
  position: absolute;
  transform-style: preserve-3d;

  @if index("horizontal" "h", $direction) {
    left: 50%;
    transform: translateX(-50%);
  } @else if index("vertical" "v", $direction) {
    top: 50%;
    transform: translateY(-50%);
  } @else {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}

// @mixin clearfix2() {
//   &::after {
//     content: '';
//     display: table;
//     clear: both;
//   }
// }



$theme: (
  themeColor: #ff0a16,
  primaryDark: #141414,
  accentDark: #ffffff,
  lightGray: #f2f2f2,
  texts: #333333
);

$themeColor: map-get($theme, themeColor) !default;
$primaryDark: map-get($theme, primaryDark) !default;
$accentDark: map-get($theme, accentDark) !default;
$lightGray: map-get($theme, lightGray) !default;
$texts: map-get($theme, texts) !default;

// Breakpoints
$breakpoints: (
  sm: 37.5rem
);

// Margins
$rowMargin: 10px;
$itemMargin: 25px;

// Sizes
$itemMinWidth: 300px;

// Settings
$maxItemsPerRow: 4;



body.main-page {
  background-color: #141414;

  .bar-header {
    background-color: rgba(0, 0, 0, 0.85);
  }
}

body.light:not(.main-page) {
  .bar-header {
    box-shadow: 0px 0px 1px 1px rgba(0, 0, 0, 0.1);
    background-color: rgba(255, 255, 255, 0.95);

    .icon-search,
    .icon-menu {
      fill: $primaryDark;
    }

    .logo a,
    .version {
      color: $primaryDark;
    }
  }
}


.grid-gradient{
  // background-color: #14141491;
  background-image: linear-gradient(180deg, rgba(20, 20, 20, 1) 5%, rgba(20, 20, 20, 0.5) 20%);
}

.hero {
  position: relative;
  background-position: center center;
  background-size: cover;
  background-repeat: no-repeat;
  width: 100%;
  height: 100vh;

  +#grid {
    margin-top: rem(-80px);
  }

  .gradient,
  .pixels {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  .pixels {
    opacity: 0.8;
    background-image: url(../../assets/img/pixels.png);
  }

  .gradient {
    background-image: linear-gradient(0deg, rgba(20, 20, 20, 1) 5%, rgba(0, 0, 0, 0) 30%);
  }

  .content-art {
    display: flex;
    justify-content: center;
    flex-direction: column;
    position: absolute;
    width: 80%;
    height: 100%;
    padding-left: 10%;

    @include media(">=sm") {
      width: 50%;
    }

    .date {
      font-size: rem(16px);
      color: rgba(255, 255, 255, 0.75);
    }

    .title-art {
      font-size: rem(40px); 
      color: #fff;
      text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);
      margin: rem(10px) 0;

      @include media(">=sm") {
        font-size: rem(50px);
      }
    }

    .description-art {
      font-size: rem(24px);
      color: #fff;
      text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);
      margin: 0;

      @include media(">=sm") {
        font-size: rem(26px);
      }
    }

    .buttons {
      margin-top: rem(50px);
    }

    .button {
      display: inline-block;
      font-size: rem(18px);
      font-weight: bold;
      color: #fff;
      text-decoration: none;
      background-color: rgba(0, 0, 0, 0.6);
      border-radius: rem(5px);
      padding: rem(10px) rem(15px);
      transition: all 0.3s;

      @include media(">=sm") {
        font-size: rem(18px);
      }

      &:hover {
        background-color: rgba(255, 255, 255, 0.5);
        box-shadow: 2px 2px 3px 0px rgba(0, 0, 0, 0.2);
      }

      svg {
        width: rem(25px);
        height: rem(25px);
        margin-right: rem(10px);
        vertical-align: middle;
        color: $themeColor;
      }

      span {
        vertical-align: middle;
      }
    }
  }
}



.home {
  @include mainFont(400); 
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  padding-top: rem(80px);

  @include media(">=sm") {
    padding-top: rem(100px);
  }

  &.no-padding {
    padding-top: 0;
  }
}

.row-art {
  @include center(100%);
  margin: 0px rem($rowMargin);
  text-align: left;
}

.flex-grid {
  display: flex;
  flex-flow: row wrap;
}

.title-category {
  font-size: rem(32px);
  margin: 0 0 rem(40px);
  padding: 0 rem(23px);
  text-transform: lowercase;
  color: #fff;
}

.box-item {
  flex: 1 0 $itemMinWidth;
  margin: 0 0 rem(30px);
  display: inline-block;
  min-height: rem(285px);
  transition: all 0.3s;
  position: relative;
  z-index: 1;

  @include media(">=sm") {
    margin: 0 rem($itemMargin) rem(30px);
  }

  // Note 1: This complex calc right here is what makes the leftover box items
  // have the same width than their siblings.
  @for $n from 2 through $maxItemsPerRow {
    $resolution: (2 * $rowMargin) + ($n * $itemMinWidth);
    @include media(">=#{$resolution}") {
      max-width: calc(100%/#{$n} - #{$itemMargin * 2});
    }
  }

  // Note 2: This sets the maximum number of box items per row.
  @include media(">=#{(2 * $rowMargin) + ($maxItemsPerRow * $itemMinWidth)}") {
    flex: 1 0 calc(100%/#{$maxItemsPerRow} - #{$itemMargin * 2});
  }

  &:hover {
    z-index: 2;
    transform: scale(1.1);

    img {
      -webkit-filter: grayscale(100%);
      filter: grayscale(100%);
      transform: scale(1.05);
    }

    .box-body {
      text-align: left;
      time,
      p {
        color: $accentDark;
      }

      .cover {
        .new-post-tag {
          background-color: #000;
        }

        .read-icon {
          opacity: 1;
        }
      }
    }
  }

  a {
    text-decoration: none;
    display: block;
  }

  .category {
    display: block;
    height: rem(36px);
    line-height: rem(36px);
    text-transform: uppercase;
    font-weight: bold;
    font-size: rem(18px);
    padding: 0 rem(15px);

    a {
      color: $accentDark;
    }
  }

  .box-body {
    img {
      width: 100%;
      height: auto;
      margin: 0 auto;
      transition: all 0.2s ease-in-out;
    }

    time {
      font-weight: 300;
      font-size: rem(16px);
      color: darken($lightGray, 50%);
      pointer-events: none;
    }

    h2 {
      margin: rem(10px) 0;
      font-size: rem(24px);
      @include mainFont(800);
      color: $accentDark;
      line-height: rem(30px);
    }

    p {
      margin: 0 0 rem(30px);
      color: darken($lightGray, 20%);
      font-size: rem(17px);
      line-height: rem(26px);
    }

    .tags a {
      height: rem(30px);
      line-height: rem(26px);
      color: $accentDark;
      padding: 0 rem(10px);
      border: 1px solid $accentDark;
      border-radius: 15px;
      display: inline-block;
      margin: 0 rem(10px) rem(10px) 0;
      z-index: 50;

      &:hover {
        color: $primaryDark;
        background: $accentDark;
        border-color: $accentDark;
      }
    }

    .cover {
      position: relative;
      display: block;

      .loader {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate3d(-50%, -50%, 0);
        color: $themeColor;
        z-index: 1;
      }

      img {
        position: relative;
        z-index: 2;
      }

      .new-post-tag {
        text-transform: uppercase;
        display: inline-block;
        background: $themeColor;
        color: #fff;
        font-size: rem(13px);
        font-weight: 700;
        line-height: rem(24px);
        padding: 0 rem(8px);
        position: absolute;
        bottom: rem(8px);
        left: 0;
        z-index: 3;
      }

      .read-icon {
        opacity: 0;
        background-color: rgba(0, 0, 0, 0.7);
        display: flex;
        align-items: center;
        justify-content: center;
        content: "";
        width: rem(80px);
        height: rem(80px);
        border-radius: 40px;
        position: absolute;
        top: 50%;
        left: 50%;
        margin-top: rem(-40px);
        margin-left: rem(-40px);
        border: 2px solid #fff;
        color: $themeColor;
        z-index: 4;

        svg {
          width: rem(48px);
        }
      }
    }
  }

  .box-info {
    padding: rem(15px);
  }
}


// .flex-grid article {
//   opacity: 0;
// }

// .flex-grid article.shown {
//   opacity: 1;
// }

// .flex-grid article.animate {
//   animation: moveUp 0.65s;
//   opacity: 1;
// }

// @keyframes moveUp {
//   from {
//     transform: translateY(200px);
//   }
//   to {
//     transform: translateY(0);
//   }
// }

// @keyframes shake {
//   2%,
//   18% {
//     transform: translate3d(-1px, 0, 0);
//   }
//   4%,
//   16% {
//     transform: translate3d(2px, 0, 0);
//   }
//   6%,
//   10%,
//   14% {
//     transform: translate3d(-4px, 0, 0);
//   }
//   8%,
//   12% {
//     transform: translate3d(4px, 0, 0);
//   }
// }

// @keyframes zoomIn {
//   50% {
//     transform: translate(-50%, -50%) scale(1.1);
//   }
// }

// @keyframes pulse {
//   0% {
//     transform: scale(0.8);
//   }
//   100% {
//     transform: scale(1);
//   }
// }

// @keyframes fadeIn {
//   from {
//     opacity: 0;
//   }
//   to {
//     opacity: 1;
//   }
// }
